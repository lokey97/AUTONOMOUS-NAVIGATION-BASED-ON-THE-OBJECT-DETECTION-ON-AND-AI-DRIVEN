# Import necessary libraries
from ultralytics import YOLO
import cv2

# Load the YOLOv8 model
model = YOLO("yolov8n.pt")  # You can use "yolov8n.pt", "yolov8s.pt", "yolov8m.pt", etc. for different sizes

# Open the camera feed (0 is usually the default camera)
cap = cv2.VideoCapture(0)

# Check if the camera is opened successfully
if not cap.isOpened():
    print("Error: Could not access the camera.")
    exit()

while True:
    # Capture frame-by-frame
    ret, frame = cap.read()
    if not ret:
        print("Error: Failed to capture image.")
        break

    # Perform object detection on the current frame
    results = model(frame)

    # Check if there are any detected objects
    if results[0].boxes is not None and len(results[0].boxes) > 0:
        # Display the frame with detected bounding boxes
        cv2.imshow("YOLOv8 Camera Detection", results[0].plot())  # Visualize detection
    else:
        # Display the frame without any bounding boxes if no objects are detected
        cv2.imshow("YOLOv8 Camera Detection", frame)

    # Exit the loop when 'q' is pressed
    if cv2.waitKey(1) & 0xFF == ord('q'):
        break

# Release the camera and close the window
cap.release()
cv2.destroyAllWindows()